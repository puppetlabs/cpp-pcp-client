environment:
  LEATHERMAN_VERSION: 0.9.1
  matrix:
  - shared: OFF
  - shared: ON

install:
  - choco install -y mingw-w64 -Version 4.8.3 -source https://www.myget.org/F/puppetlabs
  - choco install -y cmake -Version 3.2.2 -source https://www.myget.org/F/puppetlabs

  - ps: wget 'https://s3.amazonaws.com/kylo-pl-bucket/boost_1_58_0-x86_64_mingw-w64_4.8.3_win32_seh.7z' -OutFile "$pwd\boost.7z"
  - ps: 7z.exe x boost.7z -oC:\tools | FIND /V "ing  "

  - ps: wget 'https://s3.amazonaws.com/kylo-pl-bucket/openssl-1.0.2e-x64-windows.tar.lzma' -OutFile "$pwd\openssl.tar.lzma"
  - ps: 7z.exe x openssl.tar.lzma | FIND /V "ing  "
    # Install locally so OpenSSL DLLs are in the same directory as the build artifacts. This avoids
    # issues from picking up OpenSSL DLLs in C:\Windows\System32.
  - ps: 7z.exe x openssl.tar | FIND /V "ing  "
  - SET OPENSSL_ROOT_DIR=%cd%

  - ps: wget 'https://s3.amazonaws.com/kylo-pl-bucket/curl-7.42.1-x86_64_mingw-w64_4.8.3_win32_seh.7z' -OutFile "$pwd\curl-7.42.1-x86_64_mingw-w64_4.8.3_win32_seh.7z"
  - ps: 7z.exe x "curl-7.42.1-x86_64_mingw-w64_4.8.3_win32_seh.7z" -oC:\tools | FIND /V "ing "

  - ps: wget "https://github.com/puppetlabs/leatherman/releases/download/$env:LEATHERMAN_VERSION/leatherman.7z" -OutFile "$pwd\leatherman.7z"
  - ps: 7z.exe x leatherman.7z -oC:\tools | FIND /V "ing "
  - SET PATH=C:\tools\bin;%PATH%

    # Minimize environment polution; previously we were linking against the wrong OpenSSL DLLs.
  - SET PATH=C:\tools\openssl\bin;C:\tools\mingw64\bin;C:\ProgramData\chocolatey\bin;C:\Windows\system32;C:\Windows

build_script:
  - ps: cmake -G "MinGW Makefiles" -DBOOST_ROOT="C:\tools\boost_1_58_0-x86_64_mingw-w64_4.8.3_win32_seh" -DBOOST_STATIC=ON -DCURL_STATIC=ON -DBUILD_SHARED_LIBS="$env:shared" -DCMAKE_PREFIX_PATH="C:\tools\leatherman;C:\tools\curl-7.42.1-x86_64_mingw-w64_4.8.3_win32_seh" -Wno-dev .
  - ps: mingw32-make install

test_script:
  - ps: ctest -V 2>&1 | %{ if ($_ -is [System.Management.Automation.ErrorRecord]) { $_ | c++filt } else { $_ } }
